{"version":3,"sources":["styles.js","components/Logo.js","screens/HomeScreen.js","constants.js","actions.js","Store.js","screens/ChooseScreen.js","screens/OrderScreen.js","screens/ReviewScreen.js","screens/SelectPaymentScreen.js","screens/PaymentScreen.js","screens/CompleteOrderScreen.js","screens/AdminScreen.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","root","height","display","flexDirection","center","justifyContent","alignItems","textAlign","column","main","flex","overflow","color","navy","backgroundColor","green","footer","cards","red","bordered","borderWidth","borderRadius","margin","borderStyle","row","padding","space","around","between","largeButton","width","largeInput","fontSize","logo","largeLogo","title","marginTop","card","media","ready","processing","paper","avatar","spacing","palette","secondary","form","submit","Logo","props","styles","src","alt","className","large","HomeScreen","useState","Date","date","setDate","useEffect","timer","setInterval","clearInterval","Card","CardActionArea","onClick","history","push","Box","Typography","component","variant","toLocaleTimeString","ORDER_SET_TYPE","CATEGORY_LIST_REQUEST","CATEGORY_LIST_SUCCESS","CATEGORY_LIST_FAIL","PRODUCT_LIST_REQUEST","PRODUCT_LIST_SUCCESS","PRODUCT_LIST_FAIL","ORDER_ADD_ITEM","ORDER_REMOVE_ITEM","ORDER_CLEAR","ORDER_SET_PAYMENT_TYPE","ORDER_CREATE_REQUEST","ORDER_CREATE_SUCCESS","ORDER_CREATE_FAIL","ORDER_LIST_REQUEST","ORDER_LIST_SUCCESS","ORDER_LIST_FAIL","SCREEN_SET_WIDTH","listCategories","dispatch","a","type","Axios","get","data","payload","message","listProducts","categoryName","addToOrder","item","removeFromOrder","clearOrder","setPaymentType","paymentType","createOrder","order","post","listOrders","Store","createContext","initialState","widthScreen","categoryList","loading","productList","orderType","orderItems","orderCreate","orderList","reducer","state","action","categories","error","products","existItem","find","x","name","map","itemsCount","reduce","c","quantity","itemsPrice","price","taxPrice","Math","round","totalPrice","filter","newOrder","orders","StoreProvider","useReducer","value","Provider","children","ChooseScreen","useContext","chooseHandler","setOrderType","Fade","in","gutterBottom","CardMedia","image","CardContent","OrderScreen","loadingProducts","errorProducts","setCategoryName","setQuantity","isOpen","setIsOpen","product","setProduct","categoryClickHandler","Dialog","onClose","aria-labelledby","open","fullWidth","maxWidth","DialogTitle","Button","disabled","e","TextField","inputProps","InputProps","bar","largeNumber","min","size","Grid","container","md","List","CircularProgress","Alert","severity","ListItem","button","category","Avatar","Slide","direction","cardFooter","calorie","length","ReviewScreen","titlte","orderItem","SelectPaymentScreen","selectHandler","PaymentScreen","CompleteOrderScreen","number","AdminScreen","setOrderStateHandler","axios","put","_id","alert","TableContainer","Paper","Table","aria-label","TableHead","TableRow","TableCell","align","TableBody","scope","inProgress","isReady","isDelivered","createMuiTheme","typography","h1","fontWeight","h2","h3","pallete","primary","contrastText","App","ThemeProvider","CssBaseline","Container","path","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ee6aa01e.chunk.js","sourcesContent":["import { makeStyles } from '@material-ui/core';\r\n\r\nexport const useStyles = makeStyles((theme) => ({\r\n  // Common\r\n  root: {\r\n    height: '100vh',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n  },\r\n  center: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    textAlign: 'center',\r\n  },\r\n  column: { flexDirection: 'column' },\r\n  main: {\r\n    flex: 1,\r\n    overflow: 'auto',\r\n    flexDirection: 'column',\r\n    display: 'flex',\r\n    color: '#ffffff',\r\n  },\r\n  navy: {\r\n    backgroundColor: '#ff8000',\r\n  },\r\n  green: {\r\n    backgroundColor: '#00b020',\r\n  },\r\n  footer: {},\r\n  // choose screen\r\n  cards: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n  // order screen\r\n  red: {\r\n    backgroundColor: '#ff0000',\r\n    color: '#ffffff',\r\n  },\r\n  bordered: {\r\n    borderWidth: 2,\r\n    borderRadius: 5,\r\n    margin: 5,\r\n    borderStyle: 'solid',\r\n  },\r\n  row: {\r\n    display: 'flex',\r\n    padding: 10,\r\n  },\r\n  space: {\r\n    padding: 10,\r\n  },\r\n  around: {\r\n    justifyContent: 'space-around',\r\n  },\r\n  between: {\r\n    justifyContent: 'space-between',\r\n  },\r\n  largeButton: {\r\n    width: 250,\r\n  },\r\n  largeInput: {\r\n    width: '60px!important',\r\n    padding: '0!important',\r\n    fontSize: '35px!important',\r\n    textAlign: 'center!important',\r\n  },\r\n\r\n  logo: {\r\n    height: 50,\r\n  },\r\n  largeLogo: {\r\n    height: 100,\r\n  },\r\n  title: {\r\n    marginTop: 18,\r\n  },\r\n  card: { margin: 10 },\r\n  media: { width: 200 },\r\n  ready: {\r\n    backgroundColor: '#003080',\r\n    color: '#ffffff',\r\n    marginTop: 0,\r\n  },\r\n  processing: {\r\n    backgroundColor: '#404040',\r\n    color: '#ffffff',\r\n    marginTop: 0,\r\n  },\r\n  // Signin/Signup\r\n  paper: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));","import React from 'react';\r\nimport {useStyles} from '../styles';\r\n\r\nexport default function Logo(props) {\r\n\r\n    const styles =useStyles();\r\n\r\n    return (\r\n        <img src=\"/images/logo.png\"\r\n         alt=\"Food order\" \r\n         className={props.large ? styles.largeLogo : styles.logo}\r\n         ></img>\r\n    );\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport {Box,Card,CardActionArea,Typography} from '@material-ui/core';\r\nimport TouchAppIcon from '@material-ui/icons/TouchApp';\r\nimport {useStyles} from '../styles';\r\nimport Logo from '../components/Logo';\r\n\r\n\r\nexport default function HomeScreen(props) {\r\n    const styles = useStyles();\r\n    var [date,setDate] = useState(new Date());\r\n    \r\n    useEffect(() => {\r\n        var timer = setInterval(()=>setDate(new Date()), 1000 )\r\n        return function cleanup() {\r\n            clearInterval(timer)\r\n        }\r\n    \r\n    });\r\n\r\n\r\n    return (\r\n     \r\n       \r\n       <Card>\r\n           <CardActionArea onClick={() => props.history.push('/choose')}>\r\n               <Box className={[styles.root, styles.red]}>\r\n                    <Box className={[styles.main, styles.center]}>\r\n                        <Typography component=\"h6\" variant=\"h6\">\r\n                            Fast & Easy\r\n                        </Typography>\r\n                        <Typography component=\"h1\" variant=\"h1\">\r\n                           Order <br/> & pay <br/> here\r\n                        </Typography>\r\n                        <TouchAppIcon fontSize=\"large\"></TouchAppIcon>\r\n                        <p></p>\r\n                        <Typography component=\"h4\" variant=\"h4\">\r\n                        Time : {date.toLocaleTimeString()}\r\n                        </Typography>\r\n                       \r\n                    </Box>\r\n                        <Box className={[styles.center, styles.green]}>\r\n                            <Logo large></Logo>\r\n                            <Typography component=\"h4\" variant=\"h4\">\r\n                                Touch to Start\r\n                            </Typography>\r\n                            \r\n                        </Box>\r\n                      \r\n               </Box>\r\n           </CardActionArea>\r\n       </Card>\r\n    );\r\n}\r\n","export const ORDER_SET_TYPE='ORDER_SET_TYPE';\r\nexport const CATEGORY_LIST_REQUEST ='CATEGORY_LIST_REQUEST';\r\nexport const CATEGORY_LIST_SUCCESS ='CATEGORY_LIST_SUCCESS';\r\nexport const CATEGORY_LIST_FAIL ='CATEGORY_LIST_FAIL';\r\n\r\nexport const PRODUCT_LIST_REQUEST =' PRODUCT_LIST_REQUEST';\r\nexport const  PRODUCT_LIST_SUCCESS =' PRODUCT_LIST_SUCCESS';\r\nexport const  PRODUCT_LIST_FAIL =' PRODUCT_LIST_FAIL';\r\n\r\nexport const ORDER_ADD_ITEM = 'ORDER_ADD_ITEM';\r\nexport const ORDER_REMOVE_ITEM = ' ORDER_REMOVE_ITEM';\r\nexport const ORDER_CLEAR = 'ORDER_CLEAR';\r\n\r\nexport const ORDER_SET_PAYMENT_TYPE = 'ORDER_SET_PAYMENT_TYPE';\r\n\r\nexport const ORDER_CREATE_REQUEST =' ORDER_CREATE_REQUEST';\r\nexport const ORDER_CREATE_SUCCESS =' ORDER_CREATE_SUCCESS';\r\nexport const ORDER_CREATE_FAIL =' ORDER_CREATE_FAIL';\r\n\r\nexport const ORDER_LIST_REQUEST =' ORDER_LIST_REQUEST';\r\nexport const ORDER_LIST_SUCCESS =' ORDER_LIST_SUCCESS';\r\nexport const ORDER_LIST_FAIL =' ORDER_LIST_FAIL';\r\n\r\nexport const SCREEN_SET_WIDTH='SCREEN_SET_WIDTH';","import Axios from 'axios';\r\nimport { ORDER_SET_TYPE , CATEGORY_LIST_REQUEST, CATEGORY_LIST_FAIL , CATEGORY_LIST_SUCCESS , PRODUCT_LIST_REQUEST ,PRODUCT_LIST_FAIL , PRODUCT_LIST_SUCCESS, ORDER_ADD_ITEM , ORDER_REMOVE_ITEM, ORDER_CLEAR, ORDER_SET_PAYMENT_TYPE, ORDER_CREATE_REQUEST, ORDER_CREATE_FAIL, ORDER_CREATE_SUCCESS, ORDER_LIST_REQUEST, ORDER_LIST_FAIL, ORDER_LIST_SUCCESS, SCREEN_SET_WIDTH} from \"./constants\"\r\n\r\nexport const setOrderType = (dispatch, orderType) =>{\r\n    return dispatch({\r\n        type: ORDER_SET_TYPE,\r\n        payload:orderType,\r\n    });\r\n};\r\n\r\nexport const listCategories = async (dispatch) => {\r\n    dispatch ({ type: CATEGORY_LIST_REQUEST});\r\n\r\n    try {\r\n        const {data} = await Axios.get('/api/categories');\r\n        return dispatch({\r\n            type: CATEGORY_LIST_SUCCESS,\r\n            payload : data,\r\n        });\r\n    }\r\n    catch (error) {\r\n        return dispatch({\r\n            type: CATEGORY_LIST_FAIL,\r\n            payload : error.message,\r\n        });\r\n    }\r\n    \r\n};\r\n\r\nexport const listProducts = async (dispatch, categoryName = '') => {\r\n    dispatch({type: PRODUCT_LIST_REQUEST});\r\n    try {\r\n            const {data} = await Axios.get (`/api/products?category=${categoryName}`);\r\n            return dispatch({\r\n                type:PRODUCT_LIST_SUCCESS,\r\n                payload: data ,\r\n            });\r\n\r\n    } catch(error)\r\n    {\r\n        return dispatch({\r\n        type:PRODUCT_LIST_FAIL,\r\n        payload: error.message,\r\n    });\r\n   }\r\n};\r\n\r\nexport const addToOrder = async (dispatch, item) => {\r\n    return dispatch ({\r\n        type: ORDER_ADD_ITEM,\r\n        payload: item,\r\n    });\r\n};\r\n\r\nexport const removeFromOrder = async (dispatch, item) => {\r\n    return dispatch ({\r\n        type: ORDER_REMOVE_ITEM,\r\n        payload: item,\r\n    });\r\n};\r\n\r\nexport const clearOrder = async (dispatch) => {\r\n    return dispatch ({\r\n        type:ORDER_CLEAR,\r\n    });\r\n};\r\nexport const setPaymentType = async (dispatch, paymentType) => {\r\n    return dispatch ({\r\n        type: ORDER_SET_PAYMENT_TYPE,\r\n        payload:paymentType,\r\n    });\r\n};\r\n\r\nexport const createOrder = async (dispatch, order) => {\r\n    dispatch ({ type: ORDER_CREATE_REQUEST});\r\n    try {\r\n        const {data } = await Axios.post ('/api/orders', order);\r\n        dispatch({\r\n            type:ORDER_CREATE_SUCCESS,\r\n            payload: data,\r\n        });\r\n        dispatch ({\r\n            type:ORDER_CLEAR,\r\n        });\r\n    } catch (error) {\r\n        dispatch({\r\n            type:ORDER_CREATE_FAIL,\r\n            payload: error.message,\r\n        });\r\n    }\r\n};\r\n\r\nexport const listOrders = async (dispatch) => {\r\n    dispatch ({type: SCREEN_SET_WIDTH});\r\n    dispatch ({type: ORDER_LIST_REQUEST});\r\n    try {\r\n        const {data} = await Axios.get ('/api/orders');\r\n        return dispatch ({\r\n            type: ORDER_LIST_SUCCESS,\r\n            payload:data,\r\n        });\r\n    }\r\n    catch (error) {\r\n        return dispatch ({\r\n            type: ORDER_LIST_FAIL ,\r\n            payload: error.message,\r\n        });\r\n    }\r\n};","import React, {createContext, useReducer} from 'react';\r\nimport { CATEGORY_LIST_FAIL, CATEGORY_LIST_REQUEST, CATEGORY_LIST_SUCCESS, ORDER_ADD_ITEM, ORDER_CLEAR, ORDER_CREATE_FAIL, ORDER_CREATE_REQUEST, ORDER_CREATE_SUCCESS, ORDER_LIST_FAIL, ORDER_LIST_REQUEST, ORDER_LIST_SUCCESS, ORDER_REMOVE_ITEM, ORDER_SET_PAYMENT_TYPE, ORDER_SET_TYPE, PRODUCT_LIST_FAIL, PRODUCT_LIST_REQUEST, PRODUCT_LIST_SUCCESS, SCREEN_SET_WIDTH } from './constants';\r\n\r\n\r\nexport const Store= createContext();\r\n\r\nconst initialState={\r\n    widthScreen : false,\r\n    categoryList:{ loading:true },\r\n    productList:{loading:true},\r\n    order: {\r\n        orderType: 'Eat in',\r\n        orderItems:[],\r\n        paymentType:'Pay here',\r\n    },\r\n    orderCreate : {loading:true},\r\n\r\n    orderList : {loading:true},\r\n};\r\n\r\nfunction reducer(state, action){\r\n\r\n    switch(action.type){\r\n        case SCREEN_SET_WIDTH:\r\n            return {\r\n                ...state,\r\n                widthScreen:true,\r\n            };\r\n\r\n        case CATEGORY_LIST_REQUEST:\r\n            return{...state, categoryList: {loading:true}};\r\n\r\n        case CATEGORY_LIST_SUCCESS:\r\n            return{\r\n                ...state,\r\n                categoryList:{loading:false, categories: action.payload},\r\n            };\r\n            case CATEGORY_LIST_FAIL:\r\n            return{\r\n                ...state,\r\n                categoryList:{loading:false, error: action.payload},\r\n            };\r\n\r\n\r\n            case PRODUCT_LIST_REQUEST:\r\n                return{...state, productList: {loading:true}};\r\n    \r\n            case PRODUCT_LIST_SUCCESS:\r\n                return{\r\n                    ...state,\r\n                    productList:{loading:false, products: action.payload},\r\n                };\r\n                case PRODUCT_LIST_FAIL:\r\n                return{\r\n                    ...state,\r\n                    productList:{loading:false, error: action.payload},\r\n                };\r\n\r\n                case ORDER_SET_TYPE: \r\n                return{\r\n                    ...state,order : { ...state.order,orderType: action.payload}\r\n                };\r\n                case ORDER_SET_PAYMENT_TYPE:\r\n                    return {\r\n                        ...state,\r\n                        order:{...state.order,paymentType: action.payload},\r\n                    };\r\n      \r\n                case ORDER_ADD_ITEM: {\r\n                  const item = action.payload;\r\n                  const existItem = state.order.orderItems.find (\r\n                      (x) => x.name === item.name\r\n                  );\r\n                  const orderItems = existItem\r\n                  ? state.order.orderItems.map((x) => \r\n                  x.name === existItem.name ? item : x\r\n                  )\r\n                  : [...state.order.orderItems, item];\r\n      \r\n                  const itemsCount = orderItems.reduce ((a,c) => a + c.quantity,0);\r\n                  const itemsPrice = orderItems.reduce (\r\n                      (a,c) => a + c.quantity * c.price,\r\n                      0\r\n                  );\r\n                  const taxPrice =Math.round (0.15 * itemsPrice * 100) / 100;\r\n                  const totalPrice = Math.round ((itemsPrice + taxPrice) *100) / 100;\r\n      \r\n      \r\n                  return {\r\n                      ...state,\r\n                      order:{\r\n                          ...state.order,\r\n                          orderItems,\r\n                          taxPrice,\r\n                          totalPrice,\r\n                          itemsCount,\r\n                      },\r\n                  };\r\n                }\r\n              \r\n              case ORDER_REMOVE_ITEM: { \r\n                      const orderItems = state.order.orderItems.filter ( \r\n                          (x) => x.name !== action.payload.name);\r\n                          const itemsCount = orderItems.reduce ((a,c) => a + c.quantity,0);\r\n                          const itemsPrice = orderItems.reduce (\r\n                  (a,c) => a + c.quantity *c.price,\r\n                  0\r\n              );\r\n              const taxPrice =Math.round (0.15 * itemsPrice * 100) / 100;\r\n              const totalPrice = Math.round ((itemsPrice + taxPrice) *100) / 100;\r\n      \r\n              return {\r\n                  ...state,\r\n                  order:{\r\n                      ...state.order,\r\n                      orderItems,\r\n                      taxPrice,\r\n                      totalPrice,\r\n                      itemsCount,\r\n                  },\r\n\r\n              };      \r\n              }\r\n          \r\n             case ORDER_CLEAR:\r\n                 return {\r\n                     ...state,\r\n                     order:{\r\n                         orderItems:[],\r\n                         taxPrice: 0,\r\n                         totalPrice: 0 ,\r\n                         itemsCount: 0 ,\r\n                     },\r\n               };\r\n\r\n               case ORDER_CREATE_REQUEST : \r\n               return {...state, orderCreate : {loading: true}};\r\n               case ORDER_CREATE_SUCCESS :\r\n                   return{\r\n                       ...state,\r\n                       orderCreate : {loading:false, newOrder: action.payload},\r\n                   };\r\n               case ORDER_CREATE_FAIL:\r\n                   return {\r\n                       ...state,\r\n                       orderCreate: { loading: false , error: action.payload},\r\n                   };\r\n                case ORDER_LIST_REQUEST:\r\n                    return{...state, orderList: { loading: true }};\r\n                case ORDER_LIST_SUCCESS:\r\n                    return {\r\n                        ...state,\r\n                        orderList:\r\n                        {\r\n                            loading:false, orders:action.payload\r\n                        },\r\n                    };\r\n                case ORDER_LIST_FAIL:\r\n                    return {\r\n                        ...state,\r\n                        orderList: { loading: false , error: action.payload},\r\n                    };\r\n             default :\r\n              return state;\r\n    }\r\n\r\n}\r\nexport function StoreProvider(props){\r\n    const [state, dispatch]= useReducer(reducer, initialState);\r\n    const value={state, dispatch};\r\n\r\n    return <Store.Provider value={value}>{props.children}</Store.Provider>\r\n}","import { Box, Card, CardActionArea, CardContent, CardMedia, Fade, Typography } from '@material-ui/core';\r\nimport React, { useContext } from 'react';\r\nimport { setOrderType } from '../actions';\r\nimport Logo from '../components/Logo';\r\nimport { Store } from '../Store';\r\nimport {useStyles} from '../styles';\r\n\r\nexport default function ChooseScreen(props) {\r\n    const styles = useStyles();\r\n    const {dispatch} = useContext (Store);\r\n\r\n    const chooseHandler = (orderType) => {\r\n        setOrderType(dispatch,orderType);\r\n        props.history.push('/order');\r\n    };\r\n    return (\r\n       <Fade in={true}>\r\n           <Box className={[styles.root , styles.navy]}>\r\n               <Box className={[styles.main , styles.center]}>\r\n                   <Logo large></Logo>\r\n                   <Typography variant=\"h3\" component=\"h3\" className={styles.center} gutterBottom>\r\n                       Where will you be eating today?\r\n                   </Typography>\r\n                   <Box className={styles.cards}>\r\n                       <Card className={[styles.card ,styles.space]}>\r\n                    <CardActionArea onClick={()=> chooseHandler('Eat in')}>\r\n                        <CardMedia component=\"img\"\r\n                        alt=\"Eat in\"\r\n                        image=\"/images/eatin2.jpg\"\r\n                        className={styles.media}\r\n                        />\r\n                        <CardContent>\r\n                            <Typography gutterBottom \r\n                            variant=\"h4\"\r\n                            color=\"textPrimary\"\r\n                            component=\"p\"\r\n                            >\r\n                                Eat In\r\n                            </Typography>\r\n                        </CardContent>\r\n\r\n                    </CardActionArea>\r\n\r\n                       </Card>\r\n                       <Card className={[styles.card ,styles.space]}>\r\n                    <CardActionArea onClick={()=> chooseHandler('Take out')}>\r\n                        <CardMedia component=\"img\"\r\n                        alt=\"Eat in\"\r\n                        image=\"/images/eatout2.jpg\"\r\n                        className={styles.media}\r\n                        />\r\n                        <CardContent>\r\n                            <Typography gutterBottom \r\n                            variant=\"h4\"\r\n                            color=\"textPrimary\"\r\n                            component=\"p\"\r\n                            >\r\n                              Take Out\r\n                            </Typography>\r\n                        </CardContent>\r\n\r\n                    </CardActionArea>\r\n\r\n                       </Card>\r\n                   </Box>\r\n               </Box>\r\n           </Box>\r\n       </Fade>\r\n    );\r\n}\r\n","import React, { useContext, useEffect, useState } from 'react';\r\nimport { Store } from '../Store';\r\nimport {\r\n  addToOrder,\r\n  clearOrder,\r\n  listCategories,\r\n  listProducts,\r\n  removeFromOrder,\r\n} from '../actions';\r\nimport {\r\n  Avatar,\r\n  Box,\r\n  Button,\r\n  Card,\r\n  CardActionArea,\r\n  CardContent,\r\n  CardMedia,\r\n  CircularProgress,\r\n  Dialog,\r\n  DialogTitle,\r\n  Grid,\r\n  List,\r\n  ListItem,\r\n  Slide,\r\n  TextField,\r\n  Typography,\r\n} from '@material-ui/core';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport RemoveIcon from '@material-ui/icons/Remove';\r\nimport { Alert } from '@material-ui/lab';\r\nimport { useStyles } from '../styles';\r\nimport Logo from '../components/Logo';\r\nexport default function OrderScreen(props) {\r\n  const styles = useStyles();\r\n  const { state, dispatch } = useContext(Store);\r\n  const { categories, loading, error } = state.categoryList;\r\n  const {\r\n    products,\r\n    loading: loadingProducts,\r\n    error: errorProducts,\r\n  } = state.productList;\r\n  const {\r\n    orderItems,\r\n    itemsCount,\r\n    totalPrice,\r\n    taxPrice,\r\n    orderType,\r\n  } = state.order;\r\n\r\n  const [categoryName, setCategoryName] = useState('');\r\n\r\n  const [quantity, setQuantity] = useState(1);\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [product, setProduct] = useState({});\r\n  const closeHandler = () => {\r\n    setIsOpen(false);\r\n  };\r\n  const productClickHandler = (p) => {\r\n    setProduct(p);\r\n    setIsOpen(true);\r\n  };\r\n  const addToOrderHandler = () => {\r\n    addToOrder(dispatch, { ...product, quantity });\r\n    setIsOpen(false);\r\n  };\r\n  const cancelOrRemoveFromOrder = () => {\r\n    removeFromOrder(dispatch, product);\r\n    setIsOpen(false);\r\n  };\r\n  const previewOrderHandler = () => {\r\n    props.history.push(`/review`);\r\n  };\r\n  useEffect(() => {\r\n    if (!categories) {\r\n      listCategories(dispatch);\r\n    } else {\r\n      listProducts(dispatch, categoryName);\r\n    }\r\n  }, [categories, categoryName]);\r\n\r\n  const categoryClickHandler = (name) => {\r\n    setCategoryName(name);\r\n    listProducts(dispatch, categoryName);\r\n  };\r\n\r\n  return (\r\n    <Box className={styles.root}>\r\n      <Box className={styles.main}>\r\n        <Dialog\r\n          onClose={closeHandler}\r\n          aria-labelledby=\"max-width-dialog-title\"\r\n          open={isOpen}\r\n          fullWidth={true}\r\n          maxWidth=\"sm\"\r\n        >\r\n          <DialogTitle className={styles.center}>\r\n            Add {product.name}\r\n          </DialogTitle>\r\n          <Box className={[styles.row, styles.center]}>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              disabled={quantity === 1}\r\n              onClick={(e) => quantity > 1 && setQuantity(quantity - 1)}\r\n            >\r\n              <RemoveIcon />\r\n            </Button>\r\n            <TextField\r\n              inputProps={{ className: styles.largeInput }}\r\n              InputProps={{\r\n                bar: true,\r\n                inputProps: {\r\n                  className: styles.largeInput,\r\n                },\r\n              }}\r\n              className={styles.largeNumber}\r\n              type=\"number\"\r\n              variant=\"filled\"\r\n              min={1}\r\n              value={quantity}\r\n            />\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              onClick={(e) => setQuantity(quantity + 1)}\r\n            >\r\n              <AddIcon />\r\n            </Button>\r\n          </Box>\r\n          <Box className={[styles.row, styles.around]}>\r\n            <Button\r\n              onClick={cancelOrRemoveFromOrder}\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              size=\"large\"\r\n              className={styles.largeButton}\r\n            >\r\n              {orderItems.find((x) => x.name === product.name)\r\n                ? 'Remove From Order'\r\n                : 'Cancel'}\r\n            </Button>\r\n\r\n            <Button\r\n              onClick={addToOrderHandler}\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              size=\"large\"\r\n              className={styles.largeButton}\r\n            >\r\n              ADD To Order\r\n            </Button>\r\n          </Box>\r\n        </Dialog>\r\n\r\n        <Grid container>\r\n          <Grid item md={2}>\r\n            <List>\r\n              {loading ? (\r\n                <CircularProgress />\r\n              ) : error ? (\r\n                <Alert severity=\"error\">{error}</Alert>\r\n              ) : (\r\n                <>\r\n                  <ListItem button onClick={() => categoryClickHandler('')}>\r\n                    <Logo></Logo>\r\n                  </ListItem>\r\n                  {categories.map((category) => (\r\n                    <ListItem\r\n                      key={category.name}\r\n                      button\r\n                      onClick={() => categoryClickHandler(category.name)}\r\n                    >\r\n                      <Avatar alt={category.name} src={category.image} />\r\n                    </ListItem>\r\n                  ))}\r\n                </>\r\n              )}\r\n            </List>\r\n          </Grid>\r\n          <Grid item md={10}>\r\n            <Typography\r\n              gutterBottom\r\n              className={styles.title , styles.center }\r\n              variant=\"h2\"\r\n              component=\"h2\"\r\n            >\r\n              {categoryName || 'Main Menu'}\r\n            </Typography>\r\n\r\n            <Grid container spacing={1}>\r\n              {loadingProducts ? (\r\n                <CircularProgress />\r\n              ) : errorProducts ? (\r\n                <Alert severity=\"error\">{errorProducts}</Alert>\r\n              ) : (\r\n                products.map((product) => (\r\n                  <Slide key={product.name} direction=\"up\" in={true}>\r\n                    <Grid item md={6}>\r\n                      <Card\r\n                        className={styles.card}\r\n                        onClick={() => productClickHandler(product)}\r\n                      >\r\n                        <CardActionArea>\r\n                          <CardMedia\r\n                            component=\"img\"\r\n                            alt={product.name}\r\n                            image={product.image}\r\n                            className={styles.media}\r\n                          />\r\n                          <CardContent>\r\n                            <Typography\r\n                              gutterBottom\r\n                              variant=\"body2\"\r\n                              color=\"textPrimary\"\r\n                              component=\"p\"\r\n                            >\r\n                              {product.name}\r\n                            </Typography>\r\n                            <Box className={styles.cardFooter}>\r\n                              <Typography\r\n                                variant=\"body2\"\r\n                                color=\"textSecondary\"\r\n                                component=\"p\"\r\n                              >\r\n                                {product.calorie} Cal\r\n                              </Typography>\r\n                              <Typography\r\n                                variant=\"body2\"\r\n                                color=\"textPrimary\"\r\n                                component=\"p\"\r\n                              >\r\n                                ${product.price}\r\n                              </Typography>\r\n                            </Box>\r\n                          </CardContent>\r\n                        </CardActionArea>\r\n                      </Card>\r\n                    </Grid>\r\n                  </Slide>\r\n                ))\r\n              )}\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      </Box>\r\n      <Box>\r\n        <Box>\r\n          <Box className={[styles.bordered, styles.space]}>\r\n            My Order - {orderType} | Tax: ${taxPrice} | Total: ${totalPrice} |\r\n            Items: {itemsCount}\r\n          </Box>\r\n          <Box className={[styles.row, styles.around]}>\r\n            <Button\r\n              onClick={() => {\r\n                clearOrder(dispatch);\r\n                props.history.push(`/`);\r\n              }}\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={styles.largeButton}\r\n            >\r\n              Cancel Order\r\n            </Button>\r\n\r\n            <Button\r\n              onClick={previewOrderHandler}\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              disabled={orderItems.length === 0}\r\n              className={styles.largeButton}\r\n            >\r\n              Done\r\n            </Button>\r\n          </Box>\r\n        </Box>\r\n      </Box>\r\n    </Box>\r\n  );\r\n}","import React, { useContext, useState } from 'react'\r\nimport {Box, Button, Card, CardActionArea, CardContent, Dialog, DialogTitle, Grid, TextField, Typography} from '@material-ui/core';\r\nimport {useStyles} from '../styles';\r\nimport { Store } from '../Store';\r\nimport { addToOrder, removeFromOrder } from '../actions';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport RemoveIcon from '@material-ui/icons/Remove';\r\nimport Logo from '../components/Logo';\r\n\r\n\r\n\r\nexport default function ReviewScreen(props) {\r\n    const{state,dispatch} = useContext (Store);\r\n    const {\r\n        orderItems,\r\n        itemsCount,\r\n        totalPrice,\r\n        taxPrice,\r\n        orderType,\r\n    } = state.order;\r\n    const[quantity,setQuantity] = useState(1);\r\n    const [isOpen,setIsOpen] = useState(false);\r\n    const [product, setProduct]= useState({});\r\n    const styles = useStyles();\r\n    const CloseHandler = () => {\r\n        setIsOpen(false);\r\n    };\r\n    const productClickHandler = (p) => {\r\n        setProduct(p);\r\n        setIsOpen(true);\r\n    };\r\n    const addToOrderHandler = () => {\r\n        addToOrder (dispatch, {...product,quantity});\r\n        setIsOpen(false);\r\n    };\r\n    const cancelOrRemoveFromOrder =() => {\r\n        removeFromOrder (dispatch,product);\r\n        setIsOpen(false);\r\n    };\r\n    const proceedToCheckoutHandler =() => {\r\n        props.history.push('/select-payment');\r\n    };\r\n    return (\r\n      <Box className={[styles.root]}>\r\n          <Box className={[styles.main,styles.navy, styles.center]}>\r\n          <Dialog\r\n        maxWidth=\"sm\"\r\n        fullWidth={true}\r\n        open={isOpen}\r\n        onClose={CloseHandler}\r\n        >\r\n       <DialogTitle className={styles.center}>\r\n           Add {product.name}\r\n           </DialogTitle> \r\n        <Box className={styles.row , styles.center}>\r\n        <Button \r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            disabled={quantity === 1}\r\n            onClick={(e) => quantity > 1 && setQuantity (quantity - 1) }\r\n        >\r\n            <RemoveIcon/>\r\n       </Button>\r\n       <TextField\r\n            inputProps= {{ className: styles.largeInput}}\r\n            inputProps={{\r\n                bar: true,\r\n                inputProps : {\r\n                    className: styles.largeInput,\r\n                },\r\n            }}\r\n            className={styles.largeNumber}\r\n            type=\"number\"\r\n            variant = \"filled\"\r\n            min={1}\r\n            value={quantity}\r\n        />\r\n        <Button \r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          onClick={(e) => setQuantity(quantity + 1 )}\r\n        >\r\n            <AddIcon/>\r\n\r\n        </Button>\r\n        </Box>\r\n            <Box className={(styles.row , styles.around)}>\r\n        <Button\r\n           onClick={cancelOrRemoveFromOrder}\r\n           variant = \"contained\"\r\n           color=\"primary\"\r\n           size=\"large\"\r\n           className={styles.largeButton}\r\n          >\r\n              {orderItems.find ((x) => x.name === product.name)\r\n              ?'Remove From Order'\r\n              :'Cancel' }\r\n            </Button> \r\n            <Button   \r\n                onClick = {addToOrderHandler}\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                size=\"large\"\r\n                className={styles.largeButton}\r\n            > Add To Order \r\n            </Button>   \r\n\r\n            </Box>\r\n\r\n       </Dialog>\r\n        <Box className={[styles.center , styles.column]}>\r\n            <Logo large></Logo>\r\n            <Typography \r\n               gutterBottom\r\n               className={styles.titlte}\r\n               variant=\"h3\"\r\n               component=\"h3\"\r\n               >\r\n                   Review my {orderType} order\r\n               </Typography>\r\n        </Box>\r\n        <Grid container>\r\n            {orderItems.map((orderItem) => (\r\n             <Grid item md={12} key={orderItem.name}>\r\n                 <Card className={styles.card}\r\n                 onClick={() => productClickHandler(orderItem) } >\r\n                     <CardActionArea>\r\n                         <CardContent>\r\n                             <Box className={[styles.row , styles.between]}>\r\n                                <Typography \r\n                                gutterBottom\r\n                                variant=\"body2\"\r\n                                color=\"textPrimary\"\r\n                                component=\"p\">\r\n                                    {orderItem.name}\r\n                                </Typography>\r\n                                <Button variant=\"contained\">Edit</Button>\r\n                             </Box>\r\n                             <Box className={[styles.row , styles.between]}>\r\n                                <Typography\r\n                                variant=\"body2\"\r\n                                color=\"textSecondary\"\r\n                                component=\"p\">\r\n                                    {orderItem.calorie} Cal\r\n                                </Typography>\r\n                                <Typography \r\n                                 variant=\"body2\"\r\n                                 color=\"textSecondary\"\r\n                                 component=\"p\">\r\n                                     {orderItem.quantity} X ${orderItem.price}\r\n                                 </Typography>\r\n\r\n                             </Box>\r\n                         </CardContent>\r\n                     </CardActionArea>\r\n                 </Card>\r\n                 </Grid>\r\n            ))}\r\n        </Grid>\r\n     </Box>\r\n     <Box>\r\n         <Box>\r\n         <Box className={[styles.bordered, styles.space]}> \r\n            My Order - {orderType === 'takeout' ? 'Take out': 'Eat in'} | Tax:\r\n            ${taxPrice} | Total : ${totalPrice} | Items: {itemsCount}\r\n         </Box>\r\n         <Box className={[styles.row, styles.around]}>\r\n            <Button \r\n               onClick={() => {\r\n                   props.history.push(`/order`);\r\n               }}\r\n               variant=\"contained\"\r\n               color=\"primary\"\r\n               className={styles.largeButton}\r\n               >\r\n                   Back\r\n               </Button>\r\n               <Button \r\n                    onClick={proceedToCheckoutHandler}\r\n                    variant=\"contained\"\r\n                    color=\"secondary\"\r\n                    disabled={orderItems.length === 0}\r\n                    className={styles.largeButton}\r\n                    >\r\n                        Proceed To Checkout\r\n                </Button>\r\n         </Box>\r\n         </Box>\r\n     </Box>\r\n </Box>\r\n);\r\n}\r\n","import { Box, Card, CardActionArea, CardContent, CardMedia, Typography } from '@material-ui/core'\r\nimport React, { useContext } from 'react'\r\nimport {useStyles} from '../styles';\r\nimport Logo from '../components/Logo';\r\nimport { Store } from '../Store';\r\nimport { setPaymentType } from '../actions';\r\n\r\n\r\nexport default function SelectPaymentScreen(props) {\r\n    const {dispatch} = useContext (Store);\r\n    const styles = useStyles();\r\n    const selectHandler = (paymentType) => {\r\n        setPaymentType (dispatch,paymentType);\r\n        if(paymentType=== 'Pay here') {\r\n            props.history.push ('/payment');\r\n        } else{\r\n            props.history.push ('/complete');\r\n        }\r\n    };\r\n    return (\r\n       <Box className={[styles.root,styles.navy]}>\r\n       <Box className={[styles.main, styles.center]}>\r\n        <Logo large></Logo>\r\n        <Typography \r\n        className={styles.center}\r\n        gutterBottom\r\n        variant=\"h3\"\r\n        component=\"h3\"\r\n        >\r\n            Select Payment Type\r\n        </Typography>\r\n       </Box>\r\n       <Box className={styles.cards}>\r\n       <Card className={[styles.card, styles.space]}>\r\n        <CardActionArea onClick={() => selectHandler ('Pay here')}>\r\n        <CardMedia \r\n        component=\"img\"\r\n        alt=\"Pay here\"\r\n        image=\"/images/payhere.png\"\r\n        className={styles.media} />\r\n        <CardContent>\r\n            <Typography\r\n            gutterBottom\r\n            variant=\"h6\"\r\n            color=\"textPrimary\"\r\n            component=\"p\"\r\n            >\r\n                PAY HERE\r\n            </Typography>\r\n        </CardContent>\r\n        </CardActionArea>\r\n       </Card>\r\n       <Card className={[styles.card, styles.space]}>\r\n        <CardActionArea onClick={() => selectHandler ('At counter')}>\r\n        <CardMedia \r\n        component=\"img\"\r\n        alt=\"At counter\"\r\n        image=\"/images/atcounter.png\"\r\n        className={styles.media} />\r\n        <CardContent>\r\n            <Typography\r\n            gutterBottom\r\n            variant=\"h6\"\r\n            color=\"textPrimary\"\r\n            component=\"p\"\r\n            >\r\n                AT COUNTER\r\n            </Typography>\r\n        </CardContent>\r\n        </CardActionArea>\r\n       </Card>\r\n       </Box>\r\n       </Box>\r\n    );\r\n}\r\n\r\n","import { Box, Button, CircularProgress, Typography } from '@material-ui/core'\r\nimport React from 'react'\r\nimport Logo from '../components/Logo'\r\nimport { useStyles } from '../styles';\r\n\r\nexport default function PaymentScreen(props) {\r\n    const styles= useStyles ();\r\n    return (\r\n      <Box className={[styles.root, styles.navy]}>\r\n          <Box className={[styles.main,styles.center]}>\r\n            <Box>\r\n                <Logo large></Logo>\r\n                <Typography \r\n                gutterBottom\r\n                className={styles.title}\r\n                variant=\"h3\"\r\n                component=\"h3\"\r\n                >\r\n                    Please follow the instruction on the PIN pad\r\n                </Typography>\r\n                <CircularProgress/>\r\n            </Box>\r\n\r\n          </Box>\r\n          <Box className={[styles.center , styles.space]}>\r\n              <Button\r\n                 onClick = {() => props.history.push('/complete')}\r\n                 variant=\"contained\"\r\n                 color=\"primary\"\r\n                 className={styles.largeButton}\r\n                 >\r\n                     Complete Order\r\n                 </Button>\r\n          </Box>\r\n\r\n      </Box>\r\n    )\r\n}\r\n","import { Box, Button, CircularProgress, Typography } from '@material-ui/core';\r\nimport { Alert } from '@material-ui/lab';\r\nimport React, { useContext, useEffect } from 'react'\r\nimport { createOrder } from '../actions';\r\nimport Logo from '../components/Logo';\r\nimport { Store } from '../Store'\r\nimport { useStyles } from '../styles';\r\n\r\nexport default function CompleteOrderScreen(props) {\r\n    const styles =useStyles();\r\n    const {state, dispatch}= useContext(Store);\r\n    const {order} = state ;\r\n    const { loading, error , newOrder} = state.orderCreate;\r\n\r\n    useEffect (() => {\r\n            if (order.orderItems.length > 0) {\r\n                createOrder(dispatch, order)\r\n            }\r\n    }, [order]);\r\n    return (\r\n     <Box className={[styles.root , styles.navy]}>\r\n         <Box className={[styles.main, styles.center]}>\r\n             <Box >\r\n                 <Logo large></Logo>\r\n                 {loading ? (\r\n                     <CircularProgress></CircularProgress>\r\n\r\n                 ):error ? (\r\n                     <Alert severity=\"error\">{error}</Alert>\r\n                 ): (\r\n                    <>\r\n                    <Typography \r\n                         gutterBottom\r\n                         className={styles.title}\r\n                         variant=\"h3\"\r\n                         component=\"h3\"\r\n                       >\r\n                           Your order has been placed\r\n                       </Typography>\r\n                       <Typography \r\n                        gutterBottom\r\n                        className={styles.title}\r\n                        variant=\"h1\"\r\n                        component=\"h1\"\r\n                       >\r\n                           Thank you!\r\n                       </Typography>\r\n                       <Typography \r\n                        gutterBottom\r\n                        className={styles.title}\r\n                        variant=\"h3\"\r\n                        component=\"h3\"\r\n                       >\r\n                          Your order number is {newOrder.number}\r\n                       </Typography>\r\n                       </>\r\n                 )}\r\n             </Box>\r\n         </Box>\r\n         <Box className={[styles.center, styles.space]}>\r\n             <Button \r\n                onClick={() => props.history.push('/')}\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className={styles.largeButton}\r\n             >\r\n                Order Again\r\n             </Button>\r\n            \r\n         </Box>\r\n     </Box>\r\n    );\r\n}\r\n","import { Box, Button, CircularProgress, Paper, Table, TableBody, TableCell, TableContainer, TableHead, TableRow } from '@material-ui/core';\r\nimport { Store } from '../Store';\r\nimport React, { useContext, useEffect } from 'react';\r\nimport { useStyles } from '../styles';\r\nimport { listOrders } from '../actions';\r\nimport axios from 'axios';\r\nimport { Alert } from '@material-ui/lab';\r\n\r\nexport default function AdminScreen() {\r\n    const styles = useStyles();\r\n    const {state, dispatch} = useContext(Store);\r\n\r\n    const {orders, loading , error} = state.orderList ;\r\n    useEffect(() => {\r\n        listOrders(dispatch);\r\n    },[dispatch]);\r\n\r\n    const setOrderStateHandler = async (order, action) => {\r\n        try {\r\n            await axios.put ('/api/orders/' + order._id , {\r\n                action: action,\r\n            });\r\n            listOrders(dispatch);\r\n        } catch (err){\r\n            alert(err.message);\r\n        }\r\n    };\r\n\r\n\r\n\r\n    return  <Box className={[styles.root]}>\r\n        <Box className={[styles.main]}>\r\n        {loading ? (\r\n               <CircularProgress />\r\n        ): error ?(\r\n            <Alert severity=\"error\">{error}</Alert>\r\n        ) : (\r\n            <TableContainer component={Paper}>\r\n                <Table aria-label=\"Orders\">\r\n                    <TableHead>\r\n                        <TableRow>\r\n                           <TableCell>Order Number</TableCell>\r\n                           <TableCell align=\"right\">Price ($)</TableCell>\r\n                           <TableCell align=\"right\">Count</TableCell>\r\n                           <TableCell align=\"right\">Items</TableCell>\r\n                           <TableCell align=\"right\">Type</TableCell>\r\n                           <TableCell align=\"right\">Payment</TableCell>\r\n                        </TableRow>\r\n\r\n                    </TableHead>\r\n                    <TableBody>\r\n                      {orders.map((order) => (\r\n                          <TableRow key={order.name}>\r\n                              <TableCell component=\"th\" scope=\"row\">\r\n                                  {order.number}\r\n                              </TableCell>\r\n                              <TableCell align=\"right\"> {order.totalPrice} </TableCell>\r\n                              <TableCell align=\"right\"> {order.orderItems.length} </TableCell>\r\n                              <TableCell align=\"right\">\r\n                                  {order.orderItems.map ((item) =>(\r\n                                      <Box>\r\n                                          {item.name }\r\n                                      </Box>\r\n                                ))}\r\n                              </TableCell>\r\n                              <TableCell align=\"right\">{order.orderType}</TableCell>\r\n                              <TableCell align=\"right\">{order.paymentType}</TableCell> \r\n                              <TableCell align=\"right\">\r\n                                  {order.inProgress \r\n                                        ? 'In Progress' \r\n                                        : order.isReady \r\n                                        ?  'Ready'\r\n                                        : order.isDelivered\r\n                                        ? ' Delivered' \r\n                                        : 'Uknown' }</TableCell>\r\n                                        <TableCell align=\"right\">\r\n                                          <Button variant=\"contained\"\r\n                                                    onClick={() => setOrderStateHandler (order,'ready')}  \r\n                                                    color=\"primary\"\r\n                                                    >\r\n                                                        Ready\r\n                                                    </Button>\r\n                                                    <Button \r\n                                                    color=\"secondary\"\r\n                                                    variant=\"contained\"\r\n                                                    onClick={() => setOrderStateHandler (order,'cancel')}  \r\n                                                   \r\n                                                    >\r\n                                                        Cancel\r\n                                                    </Button>\r\n                                                    <Button variant=\"contained\"\r\n                                                    onClick={() => setOrderStateHandler (order,'deliver')}  \r\n                                                    >\r\n                                                        Deliver\r\n                                                    </Button>\r\n                                        </TableCell>\r\n                          </TableRow>\r\n                      ))}  \r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n        )}\r\n\r\n        </Box>\r\n\r\n    </Box>\r\n    \r\n}\r\n","import React, { useContext } from 'react';\nimport { CssBaseline , Container, Paper, ThemeProvider, createMuiTheme ,  } from \"@material-ui/core\";\nimport HomeScreen from \"./screens/HomeScreen\";\nimport { BrowserRouter, Route } from 'react-router-dom';\nimport ChooseScreen from './screens/ChooseScreen';\nimport OrderScreen from './screens/OrderScreen';\nimport ReviewScreen from './screens/ReviewScreen';\nimport SelectPaymentScreen from './screens/SelectPaymentScreen';\nimport PaymentScreen from './screens/PaymentScreen';\nimport CompleteOrderScreen from './screens/CompleteOrderScreen';\nimport AdminScreen from './screens/AdminScreen';\nimport { Store } from './Store';\n\nconst theme = createMuiTheme ({\n  typography:{\n\n    h1:{fontWeight:'bold'},\n    h2: {\n      fontSize:'2rem',\n      color:'black',\n    },\n    h3:{\n      fontSize: '1.8rem',\n      fontWeight:'bold',\n      color:'white',\n    },\n  },\n  pallete: {\n    primary:{ main: '#ff1744'},\n    secondary:{\n      main:'#118e16',\n      contrastText:'#ffffff',\n    },\n    \n  },\n});\n\nfunction App() {\n  const {state} = useContext(Store);\n\n  return (\n    <BrowserRouter>\n    <ThemeProvider theme={theme}>\n        <CssBaseline />\n        <Container maxWidth={state.widthScreen ? 'lg' : 'sm'} >\n          <Paper>\n            <Route path=\"/\" component={HomeScreen} exact={true}></Route>\n            <Route path=\"/choose\" component={ChooseScreen} exact={true}></Route>\n            <Route path=\"/order\" component={OrderScreen} exact={true}></Route>\n            <Route path=\"/review\" component={ReviewScreen} exact></Route>\n            <Route path=\"/select-payment\" component={SelectPaymentScreen} exact></Route>\n            <Route path=\"/payment\" component={PaymentScreen} exact></Route>\n            <Route path=\"/complete\" component={CompleteOrderScreen} exact></Route>\n            <Route path=\"/admin\" component={AdminScreen} exact></Route>\n\n          </Paper>\n\n        </Container>\n    </ThemeProvider>\n    </BrowserRouter>\n    \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { StoreProvider } from './Store';\n\nReactDOM.render(\n  <StoreProvider>\n    <App />\n  </StoreProvider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}